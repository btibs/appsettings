[
    // Swapped these from default
    { "keys": ["ctrl+tab"], "command": "next_view" },
    { "keys": ["ctrl+shift+tab"], "command": "prev_view" },

    // actually i don't like MRU ever
    //{ "keys": ["ctrl+pagedown"], "command": "next_view_in_stack" },
    //{ "keys": ["ctrl+pageup"], "command": "prev_view_in_stack" },

    // Auto-pair angle brackets
    { "keys": ["<"], "command": "insert_snippet", "args": {"contents": "<$0>"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "(text.html, text.xml)" },
            { "key": "selector", "operator": "not_equal", "operand": "source.css.embedded.html" },
            { "key": "selector", "operator": "not_equal", "operand": "source.js.embedded.html" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |>|\\)|]|;|\\}|$)", "match_all": true }
        ]
    },
    { "keys": ["<"], "command": "insert_snippet", "args": {"contents": "<${0:$SELECTION}>"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "(text.html, text.xml)" },
            { "key": "selector", "operator": "not_equal", "operand": "source.css.embedded.html" },
            { "key": "selector", "operator": "not_equal", "operand": "source.js.embedded.html" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    },
    { "keys": [">"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "(text.html, text.xml)" },
            { "key": "selector", "operator": "not_equal", "operand": "source.css.embedded.html" },
            { "key": "selector", "operator": "not_equal", "operand": "source.js.embedded.html" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^>", "match_all": true }
        ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "(text.html, text.xml)" },
            { "key": "selector", "operator": "not_equal", "operand": "source.css.embedded.html" },
            { "key": "selector", "operator": "not_equal", "operand": "source.js.embedded.html" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "<$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^>", "match_all": true }
        ]
    },
    { "keys": ["ctrl+alt+shift+w"], "command": "toggle_setting", "args": {"setting": "word_wrap"}},
]
